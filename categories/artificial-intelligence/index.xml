<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Artificial Intelligence on AI for HUMANITY</title><link>https://AIThoughtLab.github.io/ThinkingAI/categories/artificial-intelligence/</link><description>Recent content in Artificial Intelligence on AI for HUMANITY</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 25 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://AIThoughtLab.github.io/ThinkingAI/categories/artificial-intelligence/index.xml" rel="self" type="application/rss+xml"/><item><title>Solution of Poisson's equation over a polygonal domain</title><link>https://AIThoughtLab.github.io/ThinkingAI/physics/poisson/</link><pubDate>Wed, 25 Jan 2023 00:00:00 +0000</pubDate><guid>https://AIThoughtLab.github.io/ThinkingAI/physics/poisson/</guid><description>Poisson&amp;rsquo;s Equation
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
Poisson&amp;rsquo;s equation is a fundamental partial differential equation that arises in many areas of science and engineering. It is used to describe the behavior of scalar fields in physical systems such as electric potential or temperature distribution. The equation is expressed in terms of a source term and describes the distribution of the scalar field in a given physical system. Solving Poisson&amp;rsquo;s equation is a fundamental problem in many areas of research, including mathematical physics, engineering, and applied mathematics.</description></item><item><title>Second order Ordinary Differential Equation</title><link>https://AIThoughtLab.github.io/ThinkingAI/physics/ode/</link><pubDate>Mon, 05 Dec 2022 00:00:00 +0000</pubDate><guid>https://AIThoughtLab.github.io/ThinkingAI/physics/ode/</guid><description>Second-Order Ordinary differential equation (ODE)
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
&amp;ndash;When a system is subject to a periodic forcing with a frequency that is equal to its natural frequency, it results in resonance. In forced oscillation, the frequency of the periodic force is denoted by \(\omega\) while the natural frequency of the system is denoted by \(\omega_{0}\). When \(\omega\) and \(\omega_{0}\) are equal, the amplitude of the oscillation increases significantly, leading to resonance. Resonance can be observed in a variety of physical systems, including mechanical, electrical, and acoustic systems.</description></item><item><title>3D UNet for Brain Tumor Segmentation</title><link>https://AIThoughtLab.github.io/ThinkingAI/projects/3d-unet/</link><pubDate>Thu, 05 May 2022 00:00:00 +0000</pubDate><guid>https://AIThoughtLab.github.io/ThinkingAI/projects/3d-unet/</guid><description>In this post we will discuss how to use a 3D UNet to train a deep learning model. 3D UNet is a deep learning technique used for volumetric image segmentation, which is the process of dividing a 3D image into multiple regions or segments based on their characteristics. The architecture of 3D UNet is based on the popular 2D UNet, which has been widely used in biomedical image segmentation. If you want to read the paper of 2D UNet, visit here</description></item><item><title>3D Reconstruction Based on Medical Imaging For Personalized Surgical Procedures In Cardiac Rhythmology</title><link>https://AIThoughtLab.github.io/ThinkingAI/projects/cardiac-rhythmology/</link><pubDate>Sun, 05 Sep 2021 00:00:00 +0000</pubDate><guid>https://AIThoughtLab.github.io/ThinkingAI/projects/cardiac-rhythmology/</guid><description>This is a short summary of my master thesis on VR at the Institut Polytechnique de Paris (IP Paris)
Abstract: Virtual Reality (VR) technology plays a vital role in Science and Engineering for immersive visualization and is a new interactive paradigm. The recent advancement in the processing power of computers have enabled tremendous opportunities for the increased use of VR technology in medicine and surgery. Preoperative planning of Catheter Ablation (CA) Therapy in the VR environment is an important immersive application not only to minimize the risk of intricacy during surgery but also to reduce the operating time, a method of training for novice surgeons and for patient education.</description></item><item><title>Brain Tumor Detection with U-Net and Immersive Visualization in Mixed Reality Environment</title><link>https://AIThoughtLab.github.io/ThinkingAI/projects/unet/</link><pubDate>Wed, 10 Feb 2021 00:00:00 +0000</pubDate><guid>https://AIThoughtLab.github.io/ThinkingAI/projects/unet/</guid><description>Problematics
The recent advancement in processing power of computers have enabled tremendous opportunities for the increased use of virtual reality (VR) and augmented reality (AR) technology in medicine and surgery. The visualization of human organs in the 3D environment takes a central role in the procedure of diagnosis and the follow up treatment of any disease. An automated immersive visualization of a human brain from a sequence of 2D MRI images in the MR environment is necessary not only to detect and classify the nature of tumors but also it helps surgeons to approach the tumor from a virtual perspective and to plan a possible surgery ahead of time.</description></item><item><title>Choregraphe Software for Pepper Robot</title><link>https://AIThoughtLab.github.io/ThinkingAI/posts/choregraphe/</link><pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate><guid>https://AIThoughtLab.github.io/ThinkingAI/posts/choregraphe/</guid><description>The purpose of this post is to build up a robot speaking system with body language and speech text and speech sound in Choregraphe. See the documentation here or download the software here.
The process is very straight forward using this software.
Step-1: Firstly we opened Choregraphe App and connected to the virtual robot &amp;lsquo;NAO H21​&amp;rsquo;. After that, we selected the &amp;lsquo;Say&amp;rsquo; node, ​&amp;rsquo;Delay&amp;rsquo; node and &amp;lsquo;Play Sound&amp;rsquo; ​node on the Box library.</description></item><item><title>Gradient Decent, Stochastic Gradient Descent and Adam Optimization Algorithm</title><link>https://AIThoughtLab.github.io/ThinkingAI/posts/adam/</link><pubDate>Sat, 20 Apr 2019 00:00:00 +0000</pubDate><guid>https://AIThoughtLab.github.io/ThinkingAI/posts/adam/</guid><description>Optimization Algorithms
Before we start the Adaptive Moment Estimation (Adam) optimization algorithm, we first see what is Gradient Decent (GD) optimization and how it works and then discuss about Stochastic Gradient Descent (SGD) and finally Adam optimization.
Gradient Decent (GD)
GD is one of the most well known optimization algorithm available in machine learning and deep learning framework. Lets say we have a scalar cost function C which is continuous in the domain \(R_n\) (n-dimensional real vector space), takes the input vector \(x ( = x_1, x_2 &amp;hellip; x_n)\) of length \(n\) and we would like to find an optimal value of this cost function.</description></item><item><title>Keras – High Level API</title><link>https://AIThoughtLab.github.io/ThinkingAI/posts/kerasapi/</link><pubDate>Wed, 10 Apr 2019 00:00:00 +0000</pubDate><guid>https://AIThoughtLab.github.io/ThinkingAI/posts/kerasapi/</guid><description>What is Keras?
It is a high-level neural network API, written in Python and able to running on top of TensorFlow. It is a very useful API, which enables us fast experimentation. Keras acts as an interface for the TensorFlow library. The task here is to study the image classification problem using notMNIST dataset. This dataset contains images of letters from A – J inclusive (dowload here). See the figure below to get an idea;</description></item><item><title>TensorFlow and the Low Level API - Part 2</title><link>https://AIThoughtLab.github.io/ThinkingAI/posts/fashion-mnist_tf2/</link><pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate><guid>https://AIThoughtLab.github.io/ThinkingAI/posts/fashion-mnist_tf2/</guid><description>As a continuation from the previous part-1, in this post we will discuss a full multi-class classification problem (all 10 classes for Fashion MNIST). Using TensorFlow’s low level API (in graph mode) let us build a multi-layer neural network. We will define our architecture as follow:
Layer 1: 300 neurons (ReLu activation functions). Layer 2: 100 neurons (ReLu activation function) Layer 3: Softmax Layer Learning rate: 0.01 (with Gradient Descent). We will import the necessary libraries first;</description></item><item><title>TensorFlow and the Low Level API - Part 1</title><link>https://AIThoughtLab.github.io/ThinkingAI/posts/fashion-mnist_tf/</link><pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate><guid>https://AIThoughtLab.github.io/ThinkingAI/posts/fashion-mnist_tf/</guid><description>What is TensorFlow?
TensorFlow is an open-source software library for dataflow and differentiable programming across a range of tasks. It is primarily used for machine learning and deep learning applications. TensorFlow provides a high-level API for building and training machine learning models, as well as a low-level API for defining mathematical operations. With TensorFlow, users can easily build, train, and deploy complex models on a variety of platforms, including desktops, servers, and mobile devices.</description></item></channel></rss>