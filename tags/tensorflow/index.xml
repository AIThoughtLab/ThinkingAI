<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TensorFlow on AI for HUMANITY</title><link>https://AIThoughtLab.github.io/ThinkingAI/tags/tensorflow/</link><description>Recent content in TensorFlow on AI for HUMANITY</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 03 Apr 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://AIThoughtLab.github.io/ThinkingAI/tags/tensorflow/index.xml" rel="self" type="application/rss+xml"/><item><title>TensorFlow and the Low Level API - Part 2</title><link>https://AIThoughtLab.github.io/ThinkingAI/posts/fashion-mnist_tf2/</link><pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate><guid>https://AIThoughtLab.github.io/ThinkingAI/posts/fashion-mnist_tf2/</guid><description>As a continuation from the previous part-1, in this post we will discuss a full multi-class classification problem (all 10 classes for Fashion MNIST). Using TensorFlowâ€™s low level API (in graph mode) let us build a multi-layer neural network. We will define our architecture as follow:
Layer 1: 300 neurons (ReLu activation functions). Layer 2: 100 neurons (ReLu activation function) Layer 3: Softmax Layer Learning rate: 0.01 (with Gradient Descent). We will import the necessary libraries first;</description></item><item><title>TensorFlow and the Low Level API - Part 1</title><link>https://AIThoughtLab.github.io/ThinkingAI/posts/fashion-mnist_tf/</link><pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate><guid>https://AIThoughtLab.github.io/ThinkingAI/posts/fashion-mnist_tf/</guid><description>What is TensorFlow?
TensorFlow is an open-source software library for dataflow and differentiable programming across a range of tasks. It is primarily used for machine learning and deep learning applications. TensorFlow provides a high-level API for building and training machine learning models, as well as a low-level API for defining mathematical operations. With TensorFlow, users can easily build, train, and deploy complex models on a variety of platforms, including desktops, servers, and mobile devices.</description></item></channel></rss>